apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-webhook-service-account

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-webhook-service-account-role
rules:
  - apiGroups: ["", "apps"]
    resources: ["deployments", "daemonsets", "statefulsets", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-webhook-service-account-role-binding
subjects:
  - kind: ServiceAccount
    name: kubernetes-webhook-service-account
    namespace: default
roleRef:
  kind: ClusterRole
  name: kubernetes-webhook-service-account-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubernetes-webhook
  name: kubernetes-webhook
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: kubernetes-webhook
  template:
    metadata:
      labels:
        app: kubernetes-webhook
    spec:
      serviceAccountName: kubernetes-webhook-service-account
      containers:
        - image: 'eceasy/kubernetes-webhook:1.1.4'
          imagePullPolicy: Always
          name: kubernetes-webhook
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: kubernetes-webhook-service
  labels:
    name: kubernetes-webhook-service
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: kubernetes-webhook

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: kubernetes-webhook
  namespace: default
spec:
  rules:
    - host: k8s.eceasy.cn
      http:
        paths:
          - path: /
            backend:
              serviceName: kubernetes-webhook-service
              servicePort: 8080
  tls:
    - hosts:
        - k8s.eceasy.cn
      secretName: eceasy.cn